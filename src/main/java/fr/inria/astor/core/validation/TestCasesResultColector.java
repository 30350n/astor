package fr.inria.astor.core.validation;

import java.io.File;
import java.io.IOException;

import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;

import org.apache.log4j.Level;
import org.apache.log4j.Logger;
import org.w3c.dom.Document;
import org.w3c.dom.Element;
import org.w3c.dom.Node;
import org.w3c.dom.NodeList;



/**
 * Collects the results from a XML file generated by the execution of test suite
 * @author Matias Martinez,  matias.martinez@inria.fr
 *
 */
public class TestCasesResultColector {

	
	 Logger logger = Logger.getLogger(TestCasesResultColector.class.getName());
		
	public TestResult parse(String path) throws Exception, IOException{
		TestResult tc = new TestResult();
		File file = new File(path);
		DocumentBuilderFactory documentBuilderFactory = DocumentBuilderFactory
		        .newInstance();
		DocumentBuilder documentBuilder = documentBuilderFactory.newDocumentBuilder();
		Document document = documentBuilder.parse(file);
		logger.setLevel(Level.ERROR);
		NodeList ts = document.getElementsByTagName("testcase");
		for (int i = 0; i < ts.getLength(); i++) {
			Node n = ts.item(i);
			Node fail = n.getFirstChild();
			Element e = (Element) n;
			logger.info(n.getAttributes().getNamedItem("classname")+" "+n.getAttributes().getNamedItem("name"));
			if(fail != null /*&& fail.getNodeName().equals("failure")*/){
			
				logger.info(e.getAttribute("classname"));
				logger.info("fail");
				tc.failTest.add(transformNode(e));
				
			}
			else{
				logger.info("success");
				tc.successTest.add(transformNode(e));
			}
			
		}
	
		return tc;
	}

	private  String transformNode(Element e) {
		
		return e.getAttribute("classname")+"#"+e.getAttribute("name");
	}
}
